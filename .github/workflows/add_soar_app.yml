# .github/workflows/add_soar_app.yml
name: Open SOAR App PR

on:
  push:
    branches:
      - soar_apps
    paths:
      - 'apps/**/*.tgz'

permissions:
  contents: write         # allow checkout + commits
  pull-requests: write    # allow creating PRs

jobs:
  open-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Check out soar_apps
        uses: actions/checkout@v3
        with:
          ref: soar_apps
          fetch-depth: 0

      - name: Get new app name
        id: get_app
        run: |
          app=$(python scripts/get_new_app.py "apps/**/*.tgz")
          echo "app=$app" >> $GITHUB_OUTPUT

      - name: Extract new app
        run: |
          mkdir -p apps_extracted/${{ steps.get_app.outputs.app }}
          tar xzf apps/${{ steps.get_app.outputs.app }}.tgz \
            -C apps_extracted/${{ steps.get_app.outputs.app }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add apps_extracted/${{ steps.get_app.outputs.app }}
          git commit -m "Extract ${{ steps.get_app.outputs.app }} into apps_extracted"
          git push origin soar_apps

      - name: Lint connector file for secrets
        id: lint
        run: |
          file=$(find apps_extracted/${{ steps.get_app.outputs.app }} \
                   -type f -name "*connector*.py" | head -n1)
          if [[ -n "$file" ]]; then
            issues=$(grep -En "apikey|api_key|password|secret|token" "$file" || true)
          else
            issues="No connector file found."
          fi
          report="${issues//$'\n'/%0A}"
          echo "report=$report" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: soar_apps
          base: main
          commit-message: "chore: add SOAR app ${{ steps.get_app.outputs.app }}"
          title: "Add SOAR app ${{ steps.get_app.outputs.app }}"
          body: |
            **App:** ${{ steps.get_app.outputs.app }}
            **Lint report for connector**:
            ```text
            ${{ steps.lint.outputs.report }}
            ```
          add-paths: |
            apps/${{ steps.get_app.outputs.app }}.tgz
          delete-branch: true
