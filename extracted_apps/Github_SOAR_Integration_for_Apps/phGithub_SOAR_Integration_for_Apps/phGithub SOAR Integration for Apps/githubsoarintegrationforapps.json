{
    "appid": "1d4b00ea-b07a-4f46-bc60-c188209e5c25",
    "name": "Github SOAR Integration for Apps",
    "description": "The Github SOAR Integration for Apps connector enables seamless, automated syncing of your Splunk SOAR application packages to a GitHub repository. It authenticates to your SOAR instance, downloads the specified app bundle (.tgz), and pushes it—either creating or updating the file—into the apps/ folder of your chosen repo and branch.\r\n\r\nKey features:\r\n\r\nSOAR Download: Uses your SOAR REST API credentials to fetch the latest app package by its ID.\r\n\r\nGitHub Upload: Encodes and uploads the app bundle via the GitHub Contents API, handling new file creation or file updates automatically.\r\n\r\nConfigurable Target: Simply specify your GitHub repo (owner/repo) and branch; the connector takes care of the rest.\r\n\r\nBuilt-in Connectivity Tests: Quick actions to validate SOAR connectivity and GitHub authentication before any upload.\r\n\r\nMasked Debug Logging: Safe, masked output of credential snippets in logs to help troubleshoot without exposing secrets.\r\n\r\nInstall this app in Phantom, configure your SOAR URL and API token along with your GitHub PAT, repo and branch, and you’re set for fully automated version control of your SOAR apps.",
    "type": "devops",
    "product_vendor": "Taher Al Sharif",
    "logo": "githubsoarintegrationforapps.png",
    "logo_dark": "githubsoarintegrationforapps_dark.png",
    "product_name": "Taher Al Sharif",
    "python_version": "3.9",
    "product_version_regex": ".*",
    "publisher": "Taher Al Sharif",
    "license": "Copyright (c) Taher Al Sharif, 2025",
    "app_version": "1.0.0",
    "utctime_updated": "2025-07-11T18:31:34.515458Z",
    "package_name": "phantom_githubsoarintegrationforapps",
    "main_module": "githubsoarintegrationforapps_connector.py",
    "min_phantom_version": "6.4.1.361",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "github_token": {
            "description": "github_pat_… (your GitHub PAT)",
            "data_type": "password",
            "required": true,
            "order": 0
        },
        "github_repo": {
            "description": "Format: owner/repo (e.g. taheralsharif/splunk_soar_apps)",
            "data_type": "string",
            "required": true,
            "value_list": [],
            "default": "",
            "order": 1
        },
        "github_branch": {
            "description": "e.g. main or whatever branch you’d like to target",
            "data_type": "string",
            "required": true,
            "value_list": [],
            "default": "",
            "order": 2
        },
        "soar_url": {
            "description": "e.g. https://XXXXXXXX:XXX",
            "data_type": "string",
            "required": true,
            "value_list": [],
            "default": "",
            "order": 3
        },
        "soar_token": {
            "description": "SOAR user Token",
            "data_type": "password",
            "required": true,
            "order": 4
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "verbose": "",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "upload_app_to_github",
            "identifier": "upload_app_to_github",
            "description": "Upload SOAR App to github",
            "verbose": "Downloads a SOAR app bundle (via /rest/app_download/{app_id})\n\nEncodes it and pushes it into apps/{app_name}.tgz in your GitHub repo & branch.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "app_id": {
                    "description": "App ID associated with the App",
                    "data_type": "string",
                    "required": true,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "app_id",
                    "id": 1,
                    "param_name": "app_id"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.app_id",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "app_id",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "test_github_connection",
            "identifier": "test_github_connection",
            "description": "Purpose: Validates your GitHub PAT by calling /user. – Inputs: (none) – Outputs: Success if GitHub returns 200, Error with status code otherwise.",
            "verbose": "Purpose: Validates your GitHub PAT by calling /user.\n– Inputs: (none)\n– Outputs: Success if GitHub returns 200, Error with status code otherwise.",
            "type": "test",
            "read_only": false,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ],
    "custom_made": true
}